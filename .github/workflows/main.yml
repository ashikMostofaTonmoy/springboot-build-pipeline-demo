name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: tonmoyflagship/demo-repository
  JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean package

      - name: Run Code Coverage
        run: mvn jacoco:report

      - name: Run OWASP Dependency Check
        run: mvn org.owasp:dependency-check-maven:check

      - name: Run SonarQube Analysis
        run: |
          mvn sonar:sonar \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.dependencyCheck.jsonReportPath=target/dependency-check-report.json \
            -Dsonar.dependencyCheck.htmlReportPath=target/dependency-check-report.html \
            -Dsonar.projectName=wezvatech
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Smoke Test
        run: |
          docker run -d --name smokerun -p 8080:8080 ${{ env.REGISTRY }}:latest
          sleep 90
          ./check.sh
          docker rm --force smokerun 